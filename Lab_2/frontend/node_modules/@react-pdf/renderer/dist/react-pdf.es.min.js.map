{"version":3,"file":"react-pdf.es.min.js","sources":["../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/warning.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/standard.js","../src/font/index.js","../src/utils/url.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/elements/Root.js","../src/elements/Link.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation } = this.page;\n\n    const ownStyles = StyleSheet.resolve(this.props.style, {\n      orientation,\n      width: size.width,\n      height: size.height,\n    });\n\n    const inheritedStyles = this.parent\n      ? pick(this.parent.style, inheritedProperties)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nimport standardFonts from './standard';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = getFont(fontFamily);\n\n  // We cache the font to avoid fetching it many times\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const { src, headers, body, method = 'GET' } = font;\n      const data = await fetchFont(src, { headers, method, body });\n      font.data = fontkit.create(data);\n    } else {\n      if (BROWSER) {\n        throw new Error(\n          `Invalid font url: ${\n            font.src\n          }. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n        );\n      }\n\n      font.data = await new Promise((resolve, reject) =>\n        fontkit.open(font.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we add it.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be reset after the document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)/i;\n\nexport const getURL = value => {\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","const createHyphenator = require('hyphen');\nconst pattern = require('hyphen/patterns/en-us');\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hyphen = createHyphenator(pattern);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      if (word.includes(SOFT_HYPHEN_HEX)) {\n        return word.split(SOFT_HYPHEN_HEX);\n      }\n\n      return hyphen(word).split(SOFT_HYPHEN_HEX);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.copy().slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.copy().slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(\n        start,\n        glyphString.glyphIndexForStringIndex(glyphString.string.length),\n      );\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    opacity,\n  } = instance.style;\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          opacity,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\n\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst renderOpts = { outlineLines: false };\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.computed = false;\n    this.container = null;\n    this.attributedString = null;\n    this.layoutEngine = new LayoutEngine({\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n    });\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks\n      .reduce((acc, block) => [...acc, ...block.lines], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.height > height) return i;\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // If height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this.container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.end = this.props.maxLines || linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.container && !this.props.render) {\n      text.container = this.container.copy();\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    // We translate lines based on Yoga container\n    const { top, left } = this.getAbsoluteLayout();\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + this.padding.left;\n      line.rect.y += top + this.padding.top - initialX;\n    });\n\n    // Mock container only with appropiate lines\n    const container = { ...this.container, blocks: [{ lines: this.lines }] };\n\n    // Perform actual text rendering on document\n    new PDFRenderer(this.root.instance, renderOpts).render(container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.props.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport const renderToStream = function(element) {\n  return pdf(element).toBuffer();\n};\n\nexport const renderToFile = function(element, filePath, callback) {\n  const output = renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  createInstance,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["upperFirst","value","charAt","toUpperCase","slice","matchPercent","match","exec","isPercent","parseFloat","percent","absValue","Math","abs","absPercent","Node","constructor","parent","children","computed","layout","Yoga","createDefault","appendChild","child","this","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeChild","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","Error","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","markDirty","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","getComputedTop","getComputedLeft","getComputedRight","getComputedBottom","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","setPositionType","POSITION_TYPE_RELATIVE","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseScalar","result","scalar","unit","undefined","parseValue","isBorderStyle","key","processBorders","matchBorderShorthand","isBoxModelStyle","processBoxModel","matchBoxModel","isObjectPositionStyle","processObjectPosition","matchObjectPosition","isTransformOriginStyle","processTransformOrigin","matchTransformOrigin","transformOffsetKeywords","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","transformStyles","style","expandedStyles","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","expandStyles","resolved","flatten","input","Array","isArray","reduce","acc","s","forEach","hairlineWidth","create","styles","resolve","container","test","matchMedia","resolveMediaQueries","absoluteFillObject","position","Debug","debug","root","instance","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","clipBorderTop","ctx","rtr","rtl","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","undash","clipBorderRight","rbr","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","rbl","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","drawBorders","min","strokeOpacity","Clipping","ctr","cbr","cbl","ctl","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","element","rotate","PI","getRotation","scale","translate","getMatrix","Transformations","applyTransformations","re","warning","process","env","NODE_ENV","condition","format","args","argIndex","message","replace","console","error","x","printWarning","inheritedProperties","Base","props","merge","defaultProps","page","wrap","break","fixed","minPresenceAhead","percentX","percentY","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","applyStyle","size","orientation","ownStyles","StyleSheet","pick","setter","isFunction","getLayoutData","type","name","c","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","absoluteChilds","filter","absolute","nonAbsoluteChilds","render","assign","Borders","Transform","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","RULER_WIDTH","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","elements","Fragment","createInstance","addDynamicChild","cb","listToExplore","shift","renderDynamicNodes","super","addPage","renderChildren","View","emojiSource","hyphenationCallback","fonts","getFont","family","register","src","otherOptions","loaded","loading","data","getEmojiSource","getRegisteredFonts","registerEmojiSource","url","registerHyphenationCallback","callback","getHyphenationCallback","load","async","fontFamily","doc","font","isUrl","headers","body","method","options","response","fetch","buffer","arrayBuffer","Buffer","fetchFont","fontkit","Promise","reject","open","err","registerFont","standardFonts","includes","clear","reset","PROTOCOL_REGEXP","getURL","StandardFont","PDFFont","str","encoded","positions","encode","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","res","lastFont","lastIndex","run","defaultFont","attributes","char","start","end","codePointAt","createHyphenator","require","pattern","hyphen","cache","calculateParts","word","split","hyphenateWord","parts","LinkedList","head","tail","listSize","isLinked","prev","next","first","last","toString","toArray","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","pop","linebreak","nodes","lines","settings","demerits","line","flagged","fitness","tolerance","activeNodes","sum","stretch","shrink","lineLengths","breaks","tmp","Infinity","breakpoint","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","lineLength","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","candidates","currentClass","pow","reverse","glue","box","hyphenated","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","calculateRatio","opts","getNodes","glyphString","syllables","align","hyphenPenalty","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakLines","breakPoint","prevNode","copy","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","count","breakpoints","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","BaseLayoutEngine","hyphenationPenalty","scriptItemizer","decorationEngine","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","IMAGE_CACHE","limit","get","set","createCache","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","fetchLocalFile","safePath","allowDangerousPaths","filename","absoluteSafePath","startsWith","isDangerousLocalPath","fs","readFile","getImage","extension","toLowerCase","resolveBufferImage","guessFormat","resolveImageFromUrl","uri","fetchRemoteFile","isPng","isJpg","getImageFormat","resolveImage","cacheKey","image","isCompatibleBase64","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","emojis","regex","emojiRegex","makeFetchEmojiImage","promise","then","v","reflect","_removeNoColor","buildEmojiUrl","emoji","Font","join","getCodePoints","fetchEmojis","promises","emojiUrl","fetchEmojiImage","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragments","fragment","charSubset","String","fromCharCode","buildSubsetForFont","subsetRegex","RegExp","emojiSize","chunk","Attachment","CHARACTER","attachment","yOffset","floor","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","transformation","l","capitalize","transformText","link","characterSpacing","underlineStyle","underline","underlineColor","preprocessor","getAttributedString","AttributedString","fromFragments","renderOpts","outlineLines","PDFRenderer","createPDFRenderer","Rect","Text","attributedString","layoutEngine","setMeasureFunc","measureText","bind","href","blocks","block","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","Path","Container","linesCount","maxLines","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","initialX","y","Note","note","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","source","warn","renderImage","objectFit","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","childNode","all","loadFonts","loadImages","pageCount","pages","wrapArea","wrapPages","j","pageNumber","totalPages","loadEmojis","loadAssets","renderPages","availableMethods","painter","p","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","isDirty","document","PDFDocument","autoFirstPage","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","a","b","oldPropsKeys","newPropsKeys","emptyObject","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","shouldReplaceLink","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","Link","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","toBuffer","toBlob","stream","pipe","BlobStream","on","blob","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version"],"mappings":"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"}