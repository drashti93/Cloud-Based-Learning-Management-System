{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/utils/warning.js","../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/standard.js","../src/font/index.js","../src/utils/url.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation } = this.page;\n\n    const ownStyles = StyleSheet.resolve(this.props.style, {\n      orientation,\n      width: size.width,\n      height: size.height,\n    });\n\n    const inheritedStyles = this.parent\n      ? pick(this.parent.style, inheritedProperties)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nimport standardFonts from './standard';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = getFont(fontFamily);\n\n  // We cache the font to avoid fetching it many times\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const { src, headers, body, method = 'GET' } = font;\n      const data = await fetchFont(src, { headers, method, body });\n      font.data = fontkit.create(data);\n    } else {\n      if (BROWSER) {\n        throw new Error(\n          `Invalid font url: ${\n            font.src\n          }. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n        );\n      }\n\n      font.data = await new Promise((resolve, reject) =>\n        fontkit.open(font.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we add it.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be reset after the document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)/i;\n\nexport const getURL = value => {\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","const createHyphenator = require('hyphen');\nconst pattern = require('hyphen/patterns/en-us');\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hyphen = createHyphenator(pattern);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      if (word.includes(SOFT_HYPHEN_HEX)) {\n        return word.split(SOFT_HYPHEN_HEX);\n      }\n\n      return hyphen(word).split(SOFT_HYPHEN_HEX);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.copy().slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.copy().slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(\n        start,\n        glyphString.glyphIndexForStringIndex(glyphString.string.length),\n      );\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    opacity,\n  } = instance.style;\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          opacity,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\n\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst renderOpts = { outlineLines: false };\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.computed = false;\n    this.container = null;\n    this.attributedString = null;\n    this.layoutEngine = new LayoutEngine({\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n    });\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks\n      .reduce((acc, block) => [...acc, ...block.lines], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.height > height) return i;\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // If height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this.container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.end = this.props.maxLines || linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.container && !this.props.render) {\n      text.container = this.container.copy();\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    // We translate lines based on Yoga container\n    const { top, left } = this.getAbsoluteLayout();\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + this.padding.left;\n      line.rect.y += top + this.padding.top - initialX;\n    });\n\n    // Mock container only with appropiate lines\n    const container = { ...this.container, blocks: [{ lines: this.lines }] };\n\n    // Perform actual text rendering on document\n    new PDFRenderer(this.root.instance, renderOpts).render(container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.props.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport warning from '../src/utils/warning';\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty() && !this.state.error) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        console.error(error);\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["warning","process","env","NODE_ENV","condition","format","undefined","Error","args","argIndex","message","replace","console","error","x","Root","isDirty","document","instance","appendChild","child","removeChild","markDirty","render","PDFDocument","autoFirstPage","this","upperFirst","value","charAt","toUpperCase","slice","matchPercent","match","exec","isPercent","parseFloat","percent","absValue","Math","abs","absPercent","Node","parent","children","computed","layout","Yoga","createDefault","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseScalar","result","scalar","unit","parseValue","isBorderStyle","key","processBorders","matchBorderShorthand","isBoxModelStyle","processBoxModel","matchBoxModel","isObjectPositionStyle","processObjectPosition","matchObjectPosition","isTransformOriginStyle","processTransformOrigin","matchTransformOrigin","transformOffsetKeywords","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","transformStyles","style","expandedStyles","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","expandStyles","resolved","flatten","input","Array","isArray","reduce","acc","s","forEach","hairlineWidth","create","styles","resolve","container","test","matchMedia","resolveMediaQueries","absoluteFillObject","position","Debug","debug","root","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","clipBorderTop","ctx","rtr","rtl","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","undash","clipBorderRight","rbr","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","rbl","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","drawBorders","min","strokeOpacity","Clipping","ctr","cbr","cbl","ctl","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","element","rotate","PI","getRotation","scale","translate","getMatrix","Transformations","applyTransformations","re","inheritedProperties","Base","props","merge","_this","constructor","defaultProps","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","_this2","applyStyle","page","size","orientation","ownStyles","StyleSheet","inheritedStyles","pick","setter","isFunction","getLayoutData","type","name","c","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","renderChildren","absoluteChilds","filter","absolute","nonAbsoluteChilds","wrap","break","fixed","minPresenceAhead","percentX","percentY","assign","Borders","Transform","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","RULER_WIDTH","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","Page","_size","resetMargins","rulerWidth","dimension","addDynamicChild","elements","Fragment","createInstance","renderDynamicNodes","cb","listToExplore","shift","nodeWillWrap","addPage","getPageSize","View","emojiSource","hyphenationCallback","fonts","fetchFont","src","options","fetch","response","buffer","arrayBuffer","Buffer","getFont","family","load","fontFamily","doc","font","data","loading","isUrl","headers","body","method","fontkit","Promise","reject","open","err","loaded","registerFont","standardFonts","includes","register","otherOptions","getEmojiSource","getRegisteredFonts","registerEmojiSource","url","registerHyphenationCallback","callback","getHyphenationCallback","clear","reset","PROTOCOL_REGEXP","getURL","StandardFont","PDFFont","str","encode","encoded","positions","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","res","lastFont","lastIndex","run","defaultFont","attributes","start","end","char","codePointAt","createHyphenator","require","pattern","hyphen","cache","calculateParts","word","split","hyphenateWord","parts","prev","next","toString","LinkedList","head","tail","listSize","isLinked","first","last","toArray","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","pop","linebreak","nodes","lines","settings","demerits","line","flagged","fitness","tolerance","activeNodes","sum","stretch","shrink","lineLengths","breaks","tmp","Infinity","breakpoint","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","lineLength","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","candidates","currentClass","pow","reverse","glue","box","hyphenated","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","calculateRatio","opts","getNodes","glyphString","syllables","align","hyphenPenalty","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakLines","breakPoint","prevNode","copy","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","count","breakpoints","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","hyphenationPenalty","engines","scriptItemizer","decorationEngine","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","_BaseLayoutEngine","BaseLayoutEngine","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","limit","IMAGE_CACHE","get","set","fetchRemoteFile","uri","getImage","extension","toLowerCase","resolveBufferImage","guessFormat","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","image","cacheKey","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","emojis","regex","emojiRegex","_removeNoColor","buildEmojiUrl","emoji","Font","join","fetchEmojis","promises","promise","emojiUrl","fetchEmojiImage","then","v","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragments","fragment","charSubset","String","fromCharCode","subsetRegex","RegExp","emojiSize","chunk","Attachment","CHARACTER","attachment","yOffset","floor","getAttributedString","AttributedString","fromFragments","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","transformation","l","transformText","link","characterSpacing","underlineStyle","underline","underlineColor","preprocessor","renderOpts","outlineLines","PDFRenderer","createPDFRenderer","Rect","Text","attributedString","layoutEngine","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","path","Path","Container","linesCount","blocks","block","maxLines","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","initialX","y","href","Link","Note","note","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","safePath","allowDangerousPaths","warn","_context","renderImage","objectFit","source","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","childNode","all","loadEmojis","loadImages","loadAssets","wrapPages","pageCount","pages","wrapArea","renderPages","j","pageNumber","totalPages","availableMethods","painter","p","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","emptyObject","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","shouldReplaceLink","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","propsEqual","a","b","oldPropsKeys","newPropsKeys","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","stream","pipe","BlobStream","on","blob","toBlob","toBuffer","flatStyles","stylesArray","React","InternalBlobProvider","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","innerRef","ref","PDFDownloadLink","fileName","download","onClick","window","navigator","msSaveBlob","version"],"mappings":"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"}