{"version":3,"file":"react-pdf.browser.cjs.min.js","sources":["../src/utils/warning.js","../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/standard.js","../src/font/index.js","../src/utils/url.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation } = this.page;\n\n    const ownStyles = StyleSheet.resolve(this.props.style, {\n      orientation,\n      width: size.width,\n      height: size.height,\n    });\n\n    const inheritedStyles = this.parent\n      ? pick(this.parent.style, inheritedProperties)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nimport standardFonts from './standard';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = getFont(fontFamily);\n\n  // We cache the font to avoid fetching it many times\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const { src, headers, body, method = 'GET' } = font;\n      const data = await fetchFont(src, { headers, method, body });\n      font.data = fontkit.create(data);\n    } else {\n      if (BROWSER) {\n        throw new Error(\n          `Invalid font url: ${\n            font.src\n          }. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n        );\n      }\n\n      font.data = await new Promise((resolve, reject) =>\n        fontkit.open(font.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we add it.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be reset after the document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)/i;\n\nexport const getURL = value => {\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","const createHyphenator = require('hyphen');\nconst pattern = require('hyphen/patterns/en-us');\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hyphen = createHyphenator(pattern);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      if (word.includes(SOFT_HYPHEN_HEX)) {\n        return word.split(SOFT_HYPHEN_HEX);\n      }\n\n      return hyphen(word).split(SOFT_HYPHEN_HEX);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.copy().slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.copy().slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(\n        start,\n        glyphString.glyphIndexForStringIndex(glyphString.string.length),\n      );\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    opacity,\n  } = instance.style;\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          opacity,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\n\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst renderOpts = { outlineLines: false };\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.computed = false;\n    this.container = null;\n    this.attributedString = null;\n    this.layoutEngine = new LayoutEngine({\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n    });\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks\n      .reduce((acc, block) => [...acc, ...block.lines], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.height > height) return i;\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // If height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this.container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.end = this.props.maxLines || linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.container && !this.props.render) {\n      text.container = this.container.copy();\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    // We translate lines based on Yoga container\n    const { top, left } = this.getAbsoluteLayout();\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + this.padding.left;\n      line.rect.y += top + this.padding.top - initialX;\n    });\n\n    // Mock container only with appropiate lines\n    const container = { ...this.container, blocks: [{ lines: this.lines }] };\n\n    // Perform actual text rendering on document\n    new PDFRenderer(this.root.instance, renderOpts).render(container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.props.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport warning from '../src/utils/warning';\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty() && !this.state.error) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        console.error(error);\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["printWarning","format","args","argIndex","message","replace","console","error","Error","x","__DEV__","process","env","NODE_ENV","warning","condition","undefined","Root","isDirty","document","instance","appendChild","child","removeChild","markDirty","render","PDFDocument","autoFirstPage","this","upperFirst","value","charAt","toUpperCase","slice","isPercent","exec","matchPercent","match","parseFloat","percent","absValue","Math","abs","absPercent","Node","parent","children","computed","layout","Yoga","createDefault","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","parseScalar","result","scalar","isBorderStyle","key","matchBorderShorthand","processBorders","isBoxModelStyle","matchBoxModel","processBoxModel","isObjectPositionStyle","matchObjectPosition","processObjectPosition","isTransformOriginStyle","matchTransformOrigin","transformOffsetKeywords","processTransformOrigin","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandStyles","style","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","transformStyles","expandedStyles","resolved","create","styles","flatten","input","Array","isArray","reduce","acc","s","forEach","resolveMediaQueries","container","test","matchMedia","resolve","absoluteFillObject","position","hairlineWidth","Debug","debug","root","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","drawBorders","rtr","min","rtl","rbr","rbl","strokeOpacity","clipBorderTop","fillBorderTop","clipBorderRight","fillBorderRight","clipBorderBottom","fillBorderBottom","clipBorderLeft","fillBorderLeft","ctx","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","strokeColor","lineWidth","dash","space","undash","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","topLeftCoordX","bottomLeftXCoord","Clipping","ctr","cbr","cbl","ctl","getRotation","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","rotate","scale","translate","Transformations","applyTransformations","re","inheritedProperties","Base","props","merge","_this","constructor","defaultProps","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","_this2","applyStyle","page","size","orientation","ownStyles","StyleSheet","inheritedStyles","pick","setter","isFunction","getLayoutData","type","name","c","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","renderChildren","absoluteChilds","filter","absolute","nonAbsoluteChilds","wrap","break","fixed","minPresenceAhead","percentX","percentY","assign","Borders","Transform","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","addDynamicChild","elements","Fragment","createInstance","renderDynamicNodes","cb","listToExplore","shift","nodeWillWrap","addPage","View","emojiSource","hyphenationCallback","fonts","fetchFont","src","options","fetch","response","buffer","arrayBuffer","Buffer","register","family","otherOptions","loaded","loading","data","registerHyphenationCallback","callback","registerEmojiSource","url","getRegisteredFonts","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","font","isUrl","headers","body","method","fontkit","Promise","reject","open","err","registerFont","standardFonts","includes","reset","clear","PROTOCOL_REGEXP","getURL","StandardFont","PDFFont","str","encode","encoded","positions","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","res","lastFont","lastIndex","run","defaultFont","attributes","start","end","char","codePointAt","createHyphenator","require","pattern","SOFT_HYPHEN_HEX","hyphen","cache","calculateParts","word","split","hyphenateWord","parts","prev","next","toString","LinkedList","head","tail","listSize","isLinked","first","last","toArray","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","pop","linebreak","nodes","lines","settings","demerits","line","flagged","fitness","tolerance","activeNodes","sum","stretch","shrink","lineLengths","breaks","tmp","Infinity","breakpoint","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","lineLength","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","candidates","currentClass","pow","reverse","glue","box","hyphenated","INFINITY","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","calculateRatio","applyBestFit","count","breakpoints","HYPHEN","TOLERANCE_STEPS","TOLERANCE_LIMIT","opts","getNodes","glyphString","syllables","align","hyphenPenalty","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakLines","breakPoint","prevNode","copy","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","hyphenationPenalty","engines","scriptItemizer","decorationEngine","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","_BaseLayoutEngine","BaseLayoutEngine","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","createCache","limit","get","set","IMAGE_CACHE","getAbsoluteLocalPath","isDangerousLocalPath","filename","safePath","fetchLocalFile","allowDangerousPaths","fetchRemoteFile","uri","isValidFormat","lower","toLowerCase","guessFormat","isCompatibleBase64","getImage","extension","resolveBase64Image","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","image","cacheKey","emojis","regex","emojiRegex","reflect","promise","then","v","makeFetchEmojiImage","_removeNoColor","getCodePoints","join","buildEmojiUrl","emoji","Font","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragments","fragment","emojiSize","chunk","Attachment","CHARACTER","attachment","yOffset","floor","String","fromCharCode","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","capitalize","l","transformText","transformation","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","link","characterSpacing","underlineStyle","underline","underlineColor","preprocessor","getAttributedString","AttributedString","fromFragments","renderOpts","outlineLines","PDFRenderer","createPDFRenderer","Rect","Text","attributedString","layoutEngine","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","path","Path","Container","linesCount","blocks","block","maxLines","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","initialX","y","href","Link","Note","note","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","warn","_context","renderImage","objectFit","source","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","childNode","all","loadEmojis","loadImages","loadAssets","wrapPages","pageCount","pages","wrapArea","renderPages","j","pageNumber","totalPages","availableMethods","painter","p","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","a","b","oldPropsKeys","newPropsKeys","emptyObject","shouldReplaceLink","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","stream","pipe","BlobStream","on","blob","toBlob","toBuffer","flatStyles","stylesArray","React","InternalBlobProvider","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","innerRef","ref","PDFDownloadLink","fileName","download","onClick","window","navigator","msSaveBlob","version"],"mappings":"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"}