'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _Rect = require('../geom/Rect');

var _Rect2 = _interopRequireDefault(_Rect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DecorationLine = function () {
  function DecorationLine(rect, color, style) {
    (0, _classCallCheck3.default)(this, DecorationLine);

    this.rect = rect;
    this.color = color || 'black';
    this.style = style || 'solid';
  }

  DecorationLine.prototype.merge = function merge(line) {
    if (this.rect.maxX === line.rect.x && this.rect.y === line.rect.y) {
      var height = Math.max(this.rect.height, line.rect.height);
      this.rect.height = height;
      line.rect.height = height;

      if (this.color === line.color) {
        this.rect.width += line.rect.width;
        return true;
      }
    }

    return false;
  };

  DecorationLine.prototype.slice = function slice(startX, endX) {
    var rect = new _Rect2.default(startX, this.rect.y, endX - startX, this.rect.height);
    return new DecorationLine(rect, this.color, this.style);
  };

  return DecorationLine;
}();

exports.default = DecorationLine;