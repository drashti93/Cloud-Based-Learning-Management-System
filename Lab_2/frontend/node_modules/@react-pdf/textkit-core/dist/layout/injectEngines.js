'use strict';

exports.__esModule = true;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _geom = require('../geom');

var Geom = _interopRequireWildcard(_geom);

var _models = require('../models');

var Models = _interopRequireWildcard(_models);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Textkit = (0, _assign2.default)({}, Geom, Models);

var generateEngine = function generateEngine(name, callback) {
  if (!callback) {
    console.warn('Warning: You must provide a ' + name + ' engine');
    return null;
  }

  var Engine = callback(Textkit);

  return new Engine();
};

var injectEngines = function injectEngines(engines) {
  var engineNames = (0, _keys2.default)(engines);

  return engineNames.reduce(function (acc, name) {
    var _Object$assign2;

    return (0, _assign2.default)({}, acc, (_Object$assign2 = {}, _Object$assign2[name] = generateEngine(name, engines[name]), _Object$assign2));
  }, {});
};

exports.default = injectEngines;