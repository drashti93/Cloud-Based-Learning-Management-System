'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _wrapWords = require('./wrapWords');

var _wrapWords2 = _interopRequireDefault(_wrapWords);

var _typesetter = require('./typesetter');

var _typesetter2 = _interopRequireDefault(_typesetter);

var _injectEngines = require('./injectEngines');

var _injectEngines2 = _interopRequireDefault(_injectEngines);

var _generateGlyphs = require('./generateGlyphs');

var _generateGlyphs2 = _interopRequireDefault(_generateGlyphs);

var _resolveYOffset = require('./resolveYOffset');

var _resolveYOffset2 = _interopRequireDefault(_resolveYOffset);

var _preprocessRuns = require('./preprocessRuns');

var _preprocessRuns2 = _interopRequireDefault(_preprocessRuns);

var _splitParagraphs = require('./splitParagraphs');

var _splitParagraphs2 = _interopRequireDefault(_splitParagraphs);

var _resolveAttachments = require('./resolveAttachments');

var _resolveAttachments2 = _interopRequireDefault(_resolveAttachments);

var _applyDefaultStyles = require('./applyDefaultStyles');

var _applyDefaultStyles2 = _interopRequireDefault(_applyDefaultStyles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A LayoutEngine is the main object that performs text layout.
 * It accepts an AttributedString and a list of Container objects
 * to layout text into, and uses several helper objects to perform
 * various layout tasks. These objects can be overridden to customize
 * layout behavior.
 */

var compose = function compose() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return function (x) {
    return fns.reduceRight(function (y, f) {
      return f(y);
    }, x);
  };
};

var map = function map(fn) {
  return function (array) {
    for (var _len2 = arguments.length, other = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      other[_key2 - 1] = arguments[_key2];
    }

    return array.map(function (e, index) {
      return fn.apply(undefined, [e].concat(other, [index]));
    });
  };
};

var LayoutEngine = function () {
  function LayoutEngine(engines) {
    (0, _classCallCheck3.default)(this, LayoutEngine);

    this.engines = (0, _injectEngines2.default)(engines);
  }

  LayoutEngine.prototype.layout = function layout(attributedString, containers) {
    compose((0, _typesetter2.default)(this.engines)(containers), map((0, _resolveYOffset2.default)(this.engines)), map((0, _resolveAttachments2.default)(this.engines)), map((0, _generateGlyphs2.default)(this.engines)), map((0, _wrapWords2.default)(this.engines)), (0, _splitParagraphs2.default)(this.engines), (0, _preprocessRuns2.default)(this.engines), (0, _applyDefaultStyles2.default)(this.engines))(attributedString);
  };

  return LayoutEngine;
}();

exports.default = LayoutEngine;