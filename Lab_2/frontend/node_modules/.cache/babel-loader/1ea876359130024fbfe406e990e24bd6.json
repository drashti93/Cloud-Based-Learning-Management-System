{"ast":null,"code":"import _objectSpread from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Canvas_Lab2/273_Canvas/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nvar headers = {\n  'Accept': 'application/json'\n};\nexport function getCourseDetails(course_id) {\n  console.log(\"Get Course Details \" + course_id);\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/getCourseDetails/' + course_id, {\n      headers: _objectSpread({}, headers, {\n        'Content-Type': 'application/json'\n      }),\n      credentials: 'include',\n      body: JSON.stringify({\n        user_id: user_id,\n        password: password\n      })\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"COURSE_DETAILS_SUCCESS\",\n          payload: response.data.course_details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"COURSE_DETAILS_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function addCourse(user_id, course_id, course_name, course_department, course_description, room_number, student_capacity, waitlist_capacity, course_term, user_name) {\n  console.log(\"ADD COURSE ACTION\" + user_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/addCourse', {\n      user_id: user_id,\n      course_id: course_id,\n      course_name: course_name,\n      course_department: course_department,\n      course_description: course_description,\n      room_number: room_number,\n      student_capacity: student_capacity,\n      waitlist_capacity: waitlist_capacity,\n      course_term: course_term,\n      user_name: user_name\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"ADD_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: \"ADD_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function getAllCourses(user_id) {\n  console.log(\"Get all Courses \" + user_id);\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/getAllCourses/' + user_id, {}).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"ALL_COURSE_SUCCESS\",\n          payload: response.data.all_courses\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"ALL_COURSE_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function enroll(user_id, course_id) {\n  console.log(\"Enroll COURSE ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/enroll', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"ENROLL_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Enrollment error\" + error);\n      dispatch({\n        type: \"ENROLL_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function drop(user_id, course_id) {\n  console.log(\"Drop COURSE ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/drop', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"DROP_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Drop error\" + error);\n      dispatch({\n        type: \"DROP_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function waitlist(user_id, course_id) {\n  console.log(\"WAITLIST COURSE ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/waitlist', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"WAITLIST_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Waitlist error\" + error);\n      dispatch({\n        type: \"WAITLIST_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function genCode(user_id, course_id) {\n  console.log(\"Generate Code ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/gencode', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"GENERATE_CODE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Generate code error\" + error);\n      dispatch({\n        type: \"GENERATE_CODE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function getSingleComponentDetails(type, id) {\n  console.log(\"Incoming data\" + type + \" \" + id);\n  type = type.toLowerCase();\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/' + type + \"/\" + id, {}).then(function (response) {\n      if (response.status === 200) {\n        console.log(response);\n        dispatch({\n          type: \"SINGLE COMPONENT\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"SINGLE COMPONENT\",\n        payload: false\n      });\n    });\n  };\n}\nexport function getCode(code, user_id, course_id) {\n  console.log(\"Get code \" + code + user_id + course_id);\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/getCode/' + code + '/' + user_id + '/' + course_id, {}).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"GET_CODE\",\n          payload: true\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"GET_CODE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function submitGrades(grade, submission_id) {\n  console.log(\"Generate Code ACTION \" + grade + submission_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/submitGrades', {\n      grade: grade,\n      submission_id: submission_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(submission_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"SUBMIT_GRADE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Generate code error\" + error);\n      dispatch({\n        type: \"SUBMIT_GRADE\",\n        payload: false\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/drashtithakkar/Documents/Semester_2/CMPE273/Canvas_Lab2/273_Canvas/frontend/src/actions/course.js"],"names":["axios","headers","getCourseDetails","course_id","console","log","dispatch","get","credentials","body","JSON","stringify","user_id","password","then","response","status","type","payload","data","course_details","catch","error","addCourse","course_name","course_department","course_description","room_number","student_capacity","waitlist_capacity","course_term","user_name","post","getAllCourses","all_courses","enroll","drop","waitlist","genCode","getSingleComponentDetails","id","toLowerCase","getCode","code","submitGrades","grade","submission_id"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nconst headers = {\n  'Accept': 'application/json'\n};\n\nexport function getCourseDetails(course_id) {\n\n  console.log(\"Get Course Details \" + course_id)\n  return function(dispatch){\n    \n    axios.get('http://localhost:8000/api/getCourseDetails/'+course_id, {\n              headers: {\n                ...headers,\n                'Content-Type': 'application/json'\n              },\n              credentials:'include',\n              body: JSON.stringify({user_id,password})\n    })\n            .then(function (response) {\n              \n                console.log(response)\n                if(response.status===200) {\n\n                    dispatch({ type: \"COURSE_DETAILS_SUCCESS\", payload: response.data.course_details })\n                }\n            })\n            .catch(function (error) {\n                dispatch({type: \"COURSE_DETAILS_FAILURE\",payload: false})\n            });\n  }\n}\n\nexport function addCourse(user_id,course_id,course_name, course_department,course_description,room_number,student_capacity, waitlist_capacity, course_term,user_name) {\n\n  console.log(\"ADD COURSE ACTION\" + user_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/addCourse', {\n            \n          user_id,course_id,course_name, course_department,course_description,room_number,student_capacity, waitlist_capacity, course_term,user_name\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"ADD_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(error);\n              \n                  dispatch({\n                    type: \"ADD_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function getAllCourses(user_id) {\n\n  console.log(\"Get all Courses \" + user_id)\n  return function(dispatch){\n    \n    axios.get('http://localhost:8000/api/getAllCourses/'+user_id, {})\n            .then(function (response) {\n                console.log(response)\n                if(response.status===200) {\n\n                    dispatch({ type: \"ALL_COURSE_SUCCESS\", payload: response.data.all_courses })\n                }\n            })\n            .catch(function (error) {\n                dispatch({type: \"ALL_COURSE_FAILURE\",payload: false})\n            });\n  }\n}\n\nexport function enroll(user_id,course_id) {\n\n  console.log(\"Enroll COURSE ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/enroll', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"ENROLL_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Enrollment error\"+error);\n              \n                  dispatch({\n                    type: \"ENROLL_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function drop(user_id,course_id) {\n\n  console.log(\"Drop COURSE ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/drop', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"DROP_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Drop error\"+error);\n              \n                  dispatch({\n                    type: \"DROP_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function waitlist(user_id,course_id) {\n\n  console.log(\"WAITLIST COURSE ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/waitlist', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"WAITLIST_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Waitlist error\"+error);\n              \n                  dispatch({\n                    type: \"WAITLIST_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function genCode(user_id,course_id) {\n\n  console.log(\"Generate Code ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/gencode', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"GENERATE_CODE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Generate code error\"+error);\n              \n                  dispatch({\n                    type: \"GENERATE_CODE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\n\n\n\n\nexport function getSingleComponentDetails( type ,id) {\n  console.log(\"Incoming data\"+type+\" \"+id)\n  type = type.toLowerCase();\n  return function(dispatch){\n      axios.get('http://localhost:8000/api/'+type+\"/\"+id, {})\n            .then(function (response) {\n               if(response.status===200) {\n                 console.log(response)\n                  dispatch({\n                      type: \"SINGLE COMPONENT\",\n                      payload: response\n                  })\n              }\n            })\n            .catch(function (error) {\n              dispatch({\n                    type: \"SINGLE COMPONENT\",\n                    payload: false\n                  })\n              });\n    }\n}\n\nexport function getCode(code, user_id, course_id) {\n\n  console.log(\"Get code \" + code +user_id + course_id)\n  return function(dispatch){\n    \n    axios.get('http://localhost:8000/api/getCode/'+code+'/'+user_id+'/'+course_id, {})\n            .then(function (response) {\n                console.log(response)\n                if(response.status===200) {\n\n                    dispatch({ type: \"GET_CODE\", payload: true })\n                }\n            })\n            .catch(function (error) {\n                dispatch({type: \"GET_CODE\",payload: false})\n            });\n  }\n}\n\nexport function submitGrades(grade,submission_id) {\n\n  console.log(\"Generate Code ACTION \" + grade + submission_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/submitGrades', {\n            \n          grade,submission_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(submission_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"SUBMIT_GRADE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Generate code error\"+error);\n              \n                  dispatch({\n                    type: \"SUBMIT_GRADE\",\n                    payload: false\n                  })\n              });\n  }\n}"]},"metadata":{},"sourceType":"module"}