{"ast":null,"code":"import axios from \"axios\";\nvar headers = {\n  'Accept': 'application/json'\n};\nexport function getCourseDetails(course_id, user_id) {\n  console.log(\"Get Course Details \" + course_id + user_id);\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/getCourseDetails/' + course_id + '/' + user_id, {}).then(function (response) {\n      console.log(\"Course Details\");\n      console.log(response);\n      console.log(response.data.co);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"COURSE_DETAILS_SUCCESS\",\n          payload: response.data.course_details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"COURSE_DETAILS_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function addCourse(user_id, course_id, course_name, course_department, course_description, room_number, student_capacity, waitlist_capacity, course_term, user_name) {\n  console.log(\"ADD COURSE ACTION\" + user_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/addCourse', {\n      user_id: user_id,\n      course_id: course_id,\n      course_name: course_name,\n      course_department: course_department,\n      course_description: course_description,\n      room_number: room_number,\n      student_capacity: student_capacity,\n      waitlist_capacity: waitlist_capacity,\n      course_term: course_term,\n      user_name: user_name\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"ADD_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: \"ADD_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function getAllCourses(user_id) {\n  console.log(\"Get all Courses \" + user_id);\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/getAllCourses/' + user_id, {}).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"ALL_COURSE_SUCCESS\",\n          payload: response.data.all_courses\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"ALL_COURSE_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function enroll(user_id, course_id) {\n  console.log(\"Enroll COURSE ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/enroll', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"ENROLL_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Enrollment error\" + error);\n      dispatch({\n        type: \"ENROLL_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function drop(user_id, course_id) {\n  console.log(\"Drop COURSE ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/drop', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"DROP_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Drop error\" + error);\n      dispatch({\n        type: \"DROP_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function waitlist(user_id, course_id) {\n  console.log(\"WAITLIST COURSE ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/waitlist', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"WAITLIST_COURSE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Waitlist error\" + error);\n      dispatch({\n        type: \"WAITLIST_COURSE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function genCode(user_id, course_id) {\n  console.log(\"Generate Code ACTION \" + user_id + course_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/gencode', {\n      user_id: user_id,\n      course_id: course_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(course_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"GENERATE_CODE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Generate code error\" + error);\n      dispatch({\n        type: \"GENERATE_CODE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function getSingleComponentDetails(type, id) {\n  console.log(\"Incoming data\" + type + \" \" + id);\n  type = type.toLowerCase();\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/' + type + \"/\" + id, {}).then(function (response) {\n      if (response.status === 200) {\n        console.log(response);\n        dispatch({\n          type: \"SINGLE COMPONENT\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"SINGLE COMPONENT\",\n        payload: false\n      });\n    });\n  };\n}\nexport function getCode(code, user_id, course_id) {\n  console.log(\"Get code \" + code + user_id + course_id);\n  return function (dispatch) {\n    axios.get('http://localhost:8000/api/getCode/' + code + '/' + user_id + '/' + course_id, {}).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"GET_CODE\",\n          payload: true\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"GET_CODE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function submitGrades(grade, submission_id) {\n  console.log(\"Generate Code ACTION \" + grade + submission_id);\n  return function (dispatch) {\n    axios.post('http://localhost:8000/api/submitGrades', {\n      grade: grade,\n      submission_id: submission_id\n    }).then(function (response) {\n      console.log(\"Received Res \");\n      console.log(response);\n      console.log(submission_id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"SUBMIT_GRADE\",\n          payload: response\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Generate code error\" + error);\n      dispatch({\n        type: \"SUBMIT_GRADE\",\n        payload: false\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/src/actions/course.js"],"names":["axios","headers","getCourseDetails","course_id","user_id","console","log","dispatch","get","then","response","data","co","status","type","payload","course_details","catch","error","addCourse","course_name","course_department","course_description","room_number","student_capacity","waitlist_capacity","course_term","user_name","post","getAllCourses","all_courses","enroll","drop","waitlist","genCode","getSingleComponentDetails","id","toLowerCase","getCode","code","submitGrades","grade","submission_id"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nconst headers = {\n  'Accept': 'application/json'\n};\n\nexport function getCourseDetails(course_id, user_id) {\n\n  console.log(\"Get Course Details \" + course_id +user_id)\n  return function(dispatch){\n    \n    axios.get('http://localhost:8000/api/getCourseDetails/'+course_id+'/'+user_id, {})\n            .then(function (response) {\n              \n                console.log(\"Course Details\");\n                console.log(response);\n                console.log(response.data.co)\n                if(response.status===200) {\n\n                    dispatch({ type: \"COURSE_DETAILS_SUCCESS\", payload: response.data.course_details })\n                }\n            })\n            .catch(function (error) {\n                dispatch({type: \"COURSE_DETAILS_FAILURE\",payload: false})\n            });\n  }\n}\n\nexport function addCourse(user_id,course_id,course_name, course_department,course_description,room_number,student_capacity, waitlist_capacity, course_term,user_name) {\n\n  console.log(\"ADD COURSE ACTION\" + user_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/addCourse', {\n            \n          user_id,course_id,course_name, course_department,course_description,room_number,student_capacity, waitlist_capacity, course_term,user_name\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"ADD_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(error);\n              \n                  dispatch({\n                    type: \"ADD_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function getAllCourses(user_id) {\n\n  console.log(\"Get all Courses \" + user_id)\n  return function(dispatch){\n    \n    axios.get('http://localhost:8000/api/getAllCourses/'+user_id, {})\n            .then(function (response) {\n                console.log(response)\n                if(response.status===200) {\n\n                    dispatch({ type: \"ALL_COURSE_SUCCESS\", payload: response.data.all_courses })\n                }\n            })\n            .catch(function (error) {\n                dispatch({type: \"ALL_COURSE_FAILURE\",payload: false})\n            });\n  }\n}\n\nexport function enroll(user_id,course_id) {\n\n  console.log(\"Enroll COURSE ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/enroll', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"ENROLL_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Enrollment error\"+error);\n              \n                  dispatch({\n                    type: \"ENROLL_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function drop(user_id,course_id) {\n\n  console.log(\"Drop COURSE ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/drop', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"DROP_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Drop error\"+error);\n              \n                  dispatch({\n                    type: \"DROP_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function waitlist(user_id,course_id) {\n\n  console.log(\"WAITLIST COURSE ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/waitlist', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"WAITLIST_COURSE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Waitlist error\"+error);\n              \n                  dispatch({\n                    type: \"WAITLIST_COURSE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\nexport function genCode(user_id,course_id) {\n\n  console.log(\"Generate Code ACTION \" + user_id + course_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/gencode', {\n            \n          user_id,course_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(course_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"GENERATE_CODE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Generate code error\"+error);\n              \n                  dispatch({\n                    type: \"GENERATE_CODE\",\n                    payload: false\n                  })\n              });\n  }\n}\n\n\n\n\n\nexport function getSingleComponentDetails( type ,id) {\n  console.log(\"Incoming data\"+type+\" \"+id)\n  type = type.toLowerCase();\n  return function(dispatch){\n      axios.get('http://localhost:8000/api/'+type+\"/\"+id, {})\n            .then(function (response) {\n               if(response.status===200) {\n                 console.log(response)\n                  dispatch({\n                      type: \"SINGLE COMPONENT\",\n                      payload: response\n                  })\n              }\n            })\n            .catch(function (error) {\n              dispatch({\n                    type: \"SINGLE COMPONENT\",\n                    payload: false\n                  })\n              });\n    }\n}\n\nexport function getCode(code, user_id, course_id) {\n\n  console.log(\"Get code \" + code +user_id + course_id)\n  return function(dispatch){\n    \n    axios.get('http://localhost:8000/api/getCode/'+code+'/'+user_id+'/'+course_id, {})\n            .then(function (response) {\n                console.log(response)\n                if(response.status===200) {\n\n                    dispatch({ type: \"GET_CODE\", payload: true })\n                }\n            })\n            .catch(function (error) {\n                dispatch({type: \"GET_CODE\",payload: false})\n            });\n  }\n}\n\nexport function submitGrades(grade,submission_id) {\n\n  console.log(\"Generate Code ACTION \" + grade + submission_id)\n  return function(dispatch){\n\n\n      axios.post('http://localhost:8000/api/submitGrades', {\n            \n          grade,submission_id\n            \n            })\n            .then(function (response) {\n                console.log(\"Received Res \")\n                console.log(response)\n                console.log(submission_id)\n                if(response.status===200) {\n                  \n                    dispatch({\n                      type: \"SUBMIT_GRADE\",\n                      payload: response\n                  })\n\n                }\n              \n            })\n            .catch(function (error) {\n              console.log(\"Generate code error\"+error);\n              \n                  dispatch({\n                    type: \"SUBMIT_GRADE\",\n                    payload: false\n                  })\n              });\n  }\n}"]},"metadata":{},"sourceType":"module"}