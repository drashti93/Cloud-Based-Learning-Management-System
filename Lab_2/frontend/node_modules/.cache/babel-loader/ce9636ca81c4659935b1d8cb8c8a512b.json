{"ast":null,"code":"import _classCallCheck from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/src/components/enrollment/enroll.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './enroll.css';\nimport * as actions from '../../actions/course';\nimport Sidebar from '../../components/sidebar/sidebar.js';\nimport swal from 'sweetalert';\n\nvar Enroll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Enroll, _Component);\n\n  function Enroll(props) {\n    var _this;\n\n    _classCallCheck(this, Enroll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Enroll).call(this, props));\n    _this.state = {\n      isStudent: \"\",\n      user_id: \"\",\n      course_id: \"\",\n      all_courses: [],\n      display_courses: [],\n      filtered_courses: [],\n      enrollment_count: \"\",\n      enrolled: \"\",\n      isEnrollDisabled: \"\",\n      isDropDisabled: \"\",\n      isWaitDisabled: \"\",\n      activePage: 1,\n      current: 1,\n      itemsPerPage: 4,\n      isEnterPemCodeHidden: true\n    };\n    _this.reload_screen = _this.reload_screen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.filterList = _this.filterList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clickHandler = _this.clickHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Enroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Course DID MOUNT\");\n      this.props.getAllCourses(this.props.user_id);\n\n      if (this.props.isStudent === \"on\") {\n        this.setState({\n          isHidden: true\n        });\n      } else {\n        this.setState({\n          isHidden: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      console.log('Component WILL RECIEVE PROPS!');\n      console.log(newProps);\n      this.setState({\n        display_courses: newProps.all_courses\n      });\n    }\n  }, {\n    key: \"reload_screen\",\n    value: function reload_screen() {\n      setTimeout(function () {\n        window.location.reload();\n      }, 1000);\n    }\n  }, {\n    key: \"filterList\",\n    value: function filterList(event) {\n      var text = event.target.value.toLowerCase();\n\n      if (event.target.value === \"\") {\n        this.setState({\n          display_courses: this.props.all_courses\n        });\n      } else {\n        var tempArray = this.props.all_courses.filter(function (course) {\n          return course.course_name.toLowerCase().includes(text) || course.course_id.toString().includes(text);\n        });\n        this.setState({\n          display_courses: tempArray\n        });\n      } //this.setState({display_courses: filtered_courses});\n\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(event) {\n      this.setState({\n        current: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"sweetAlert\",\n    value: function sweetAlert() {\n      var _this2 = this;\n\n      swal(\"Great\", \"Successfully Enrolled\", \"success\").then(function () {\n        _this2.reload_screen();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          current = _this$state.current,\n          itemsPerPage = _this$state.itemsPerPage;\n      var indexOfLastPage = current * itemsPerPage;\n      var indexOfFirstPage = indexOfLastPage - itemsPerPage;\n      var currentTodos = this.state.display_courses.slice(indexOfFirstPage, indexOfLastPage);\n      console.log(\"Number of properties : \" + this.state.display_courses.length);\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(this.state.display_courses.length / itemsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var showPageNumbers1 = pageNumbers.map(function (number) {\n        return React.createElement(\"button\", {\n          class: \"btn btn-outline-primary pageButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          class: \"page-link\",\n          key: number,\n          id: number,\n          onClick: _this3.clickHandler,\n          className: \"nums\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, number));\n      });\n      return React.createElement(\"div\", {\n        className: \"course-content-area \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row course_row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs- course-option-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"assignment-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"assignment-heading-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Enroll Courses\"), React.createElement(\"div\", {\n        className: \"filter-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        placeholder: \"Search\",\n        onChange: this.filterList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })))), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Course Term\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Course ID\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Course Name\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Professor\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Enroll\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Drop\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Waitlist\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Permission Code\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, currentTodos.map(function (course, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, index), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Spring 2019\"), React.createElement(\"td\", {\n          id: course.course_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, course.course_id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, course.course_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, course.user_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          hidden: course.enrolled === 'no' && course.enrollment_count >= course.student_capacity || course.enrolled === 'yes' || course.enrollment_count == course.student_capacity + course.waitlist_capacity || course.enrolled === 'no' && course.enrollment_count >= course.student_capacity,\n          onClick: function onClick() {\n            _this3.props.enroll(_this3.props.user_id, course.course_id);\n\n            _this3.reload_screen();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Enroll\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          hidden: course.enrolled === 'no' || course.enrollment_count == course.student_capacity + course.waitlist_capacity,\n          onClick: function onClick() {\n            _this3.props.drop(_this3.props.user_id, course.course_id);\n\n            _this3.reload_screen();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"Drop\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          hidden: course.enrolled === 'yes' || course.enrolled === 'no' && course.enrollment_count < course.student_capacity || course.enrollment_count == course.student_capacity + course.waitlist_capacity,\n          onClick: function onClick() {\n            _this3.setState({\n              isEnterPemCodeHidden: false\n            });\n\n            _this3.props.waitlist(_this3.props.user_id, course.course_id);\n\n            _this3.reload_screen();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"Waitlist\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn\",\n          hidden: _this3.state.is,\n          onClick: function onClick() {\n            return swal({\n              text: \"Enter code\",\n              content: \"input\"\n            }).then(function (code) {\n              _this3.props.getCode(code, _this3.props.user_id, course.course_id);\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Enter permission code\")));\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, showPageNumbers1)))));\n    }\n  }]);\n\n  return Enroll;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    user_id: state.auth.user_id,\n    all_courses: state.course.all_courses,\n    isStudent: state.auth.isStudent,\n    enrollment_count: state.course.enrollment_count,\n    course_list: state.dashboard.course_list\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getAllCourses: function getAllCourses(user_id) {\n      return dispatch(actions.getAllCourses(user_id));\n    },\n    enroll: function enroll(user_id, course_id) {\n      return dispatch(actions.enroll(user_id, course_id));\n    },\n    drop: function drop(user_id, course_id) {\n      return dispatch(actions.drop(user_id, course_id));\n    },\n    waitlist: function waitlist(user_id, course_id) {\n      return dispatch(actions.waitlist(user_id, course_id));\n    },\n    getCode: function getCode(code, user_id, course_id) {\n      return dispatch(actions.getCode(code, user_id, course_id));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Enroll);","map":{"version":3,"sources":["/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/src/components/enrollment/enroll.js"],"names":["React","Component","connect","actions","Sidebar","swal","Enroll","props","state","isStudent","user_id","course_id","all_courses","display_courses","filtered_courses","enrollment_count","enrolled","isEnrollDisabled","isDropDisabled","isWaitDisabled","activePage","current","itemsPerPage","isEnterPemCodeHidden","reload_screen","bind","filterList","clickHandler","console","log","getAllCourses","setState","isHidden","newProps","setTimeout","window","location","reload","event","text","target","value","toLowerCase","tempArray","filter","course","course_name","includes","toString","Number","id","then","indexOfLastPage","indexOfFirstPage","currentTodos","slice","length","pageNumbers","i","Math","ceil","push","showPageNumbers1","map","number","index","user_name","student_capacity","waitlist_capacity","enroll","drop","waitlist","is","content","code","getCode","mapStateToProps","auth","course_list","dashboard","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,cAAP;AACA,OAAO,KAAKC,OAAZ,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;IAGMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACpB,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACHC,MAAAA,SAAS,EAAE,EADR;AAEHC,MAAAA,OAAO,EAAE,EAFN;AAGHC,MAAAA,SAAS,EAAE,EAHR;AAIHC,MAAAA,WAAW,EAAE,EAJV;AAKHC,MAAAA,eAAe,EAAE,EALd;AAMHC,MAAAA,gBAAgB,EAAE,EANf;AAOHC,MAAAA,gBAAgB,EAAE,EAPf;AAQHC,MAAAA,QAAQ,EAAE,EARP;AASHC,MAAAA,gBAAgB,EAAE,EATf;AAUHC,MAAAA,cAAc,EAAE,EAVb;AAWHC,MAAAA,cAAc,EAAE,EAXb;AAYHC,MAAAA,UAAU,EAAE,CAZT;AAaHC,MAAAA,OAAO,EAAG,CAbP;AAcHC,MAAAA,YAAY,EAAG,CAdZ;AAeHC,MAAAA,oBAAoB,EAAE;AAfnB,KAAb;AAiBM,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AAtBc;AAuBpB;;;;wCAEsB;AAChBG,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAKtB,KAAL,CAAWuB,aAAX,CAAyB,KAAKvB,KAAL,CAAWG,OAApC;;AACA,UAAG,KAAKH,KAAL,CAAWE,SAAX,KAAyB,IAA5B,EAAiC;AAC7B,aAAKsB,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH,OAJD,MAKI;AACA,aAAKD,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH;AAEJ;;;8CAEyBC,Q,EAAU;AAChCL,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,WAAKF,QAAL,CAAc;AACVlB,QAAAA,eAAe,EAAEoB,QAAQ,CAACrB;AADhB,OAAd;AAGH;;;oCAGW;AACZsB,MAAAA,UAAU,CAAC,YAAW;AAClBC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAFS,EAEP,IAFO,CAAV;AAIH;;;+BAEUC,K,EAAO;AAGd,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAX;;AACA,UAAGJ,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAA1B,EAA6B;AACzB,aAAKV,QAAL,CAAc;AAAClB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWK;AAA9B,SAAd;AACH,OAFD,MAEK;AAID,YAAI+B,SAAS,GAAG,KAAKpC,KAAL,CAAWK,WAAX,CAAuBgC,MAAvB,CAA8B,UAAAC,MAAM,EAAI;AACrD,iBAAQA,MAAM,CAACC,WAAP,CAAmBJ,WAAnB,GAAiCK,QAAjC,CAA0CR,IAA1C,CAAD,IAAsDM,MAAM,CAAClC,SAAP,CAAiBqC,QAAjB,GAA4BD,QAA5B,CAAqCR,IAArC,CAA7D;AACF,SAFe,CAAhB;AAGA,aAAKR,QAAL,CAAc;AAAClB,UAAAA,eAAe,EAAG8B;AAAnB,SAAd;AACH,OAda,CAgBd;;AAGH;;;iCAEYL,K,EAAO;AAChB,WAAKP,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAE4B,MAAM,CAACX,KAAK,CAACE,MAAN,CAAaU,EAAd;AADL,OAAd;AAGD;;;iCAEW;AAAA;;AAEV7C,MAAAA,IAAI,CAAC,OAAD,EAAU,uBAAV,EAAmC,SAAnC,CAAJ,CACC8C,IADD,CACM,YAAM;AACV,QAAA,MAAI,CAAC3B,aAAL;AACD,OAHD;AAIH;;;6BAEO;AAAA;;AAAA,wBAC8B,KAAKhB,KADnC;AAAA,UACIa,OADJ,eACIA,OADJ;AAAA,UACaC,YADb,eACaA,YADb;AAEJ,UAAM8B,eAAe,GAAG/B,OAAO,GAAGC,YAAlC;AACA,UAAM+B,gBAAgB,GAAGD,eAAe,GAAG9B,YAA3C;AACA,UAAMgC,YAAY,GAAG,KAAK9C,KAAL,CAAWK,eAAX,CAA2B0C,KAA3B,CAAiCF,gBAAjC,EAAmDD,eAAnD,CAArB;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4B,KAAKrB,KAAL,CAAWK,eAAX,CAA2B2C,MAAnE;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAU,KAAKpD,KAAL,CAAWK,eAAX,CAA2B2C,MAA3B,GAAoClC,YAA9C,CAArB,EAAkFoC,CAAC,EAAnF,EAAuF;AACrFD,QAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAED,UAAMI,gBAAgB,GAAGL,WAAW,CAACM,GAAZ,CAAgB,UAAAC,MAAM,EAAI;AAC/C,eACE;AAAQ,UAAA,KAAK,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAG,UAAA,KAAK,EAAC,WAAT;AACjD,UAAA,GAAG,EAAEA,MAD4C;AAEjD,UAAA,EAAE,EAAEA,MAF6C;AAGjD,UAAA,OAAO,EAAE,MAAI,CAACrC,YAHmC;AAIjD,UAAA,SAAS,EAAC,MAJuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMtDqC,MANsD,CAAnD,CADF;AAUD,OAXsB,CAAzB;AAaJ,aAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAKI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIY;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAU,QAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,8BAA7B;AAA4D,QAAA,WAAW,EAAC,QAAxE;AAAiF,QAAA,QAAQ,EAAE,KAAKtC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,CADN,CAHJ,EAUI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,EAKI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAMI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,EAOI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,EASI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATJ,CADN,CADA,EAcF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI4B,YAAY,CAACS,GAAb,CAAiB,UAAClB,MAAD,EAAQoB,KAAR,EAAkB;AAChC,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGF;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBA,KAAjB,CAHE,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJE,EAKF;AAAI,UAAA,EAAE,EAAEpB,MAAM,CAAClC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BkC,MAAM,CAAClC,SAAlC,CALE,EAMF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKkC,MAAM,CAACC,WAAZ,CANE,EAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,MAAM,CAACqB,SAAZ,CAPE,EAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,MAAM,EAAGrB,MAAM,CAAC7B,QAAP,KAAoB,IAApB,IAA4B6B,MAAM,CAAC9B,gBAAP,IAA2B8B,MAAM,CAACsB,gBAA/D,IAAqFtB,MAAM,CAAC7B,QAAP,KAAoB,KAAzG,IAAoH6B,MAAM,CAAC9B,gBAAP,IAA2B8B,MAAM,CAACsB,gBAAP,GAA0BtB,MAAM,CAACuB,iBAAhL,IAAuMvB,MAAM,CAAC7B,QAAP,KAAoB,IAApB,IAA4B6B,MAAM,CAAC9B,gBAAP,IAA2B8B,MAAM,CAACsB,gBAAjT;AAAqU,UAAA,OAAO,EAAG,mBAAM;AAAC,YAAA,MAAI,CAAC5D,KAAL,CAAW8D,MAAX,CAAkB,MAAI,CAAC9D,KAAL,CAAWG,OAA7B,EAAqCmC,MAAM,CAAClC,SAA5C;;AAAwD,YAAA,MAAI,CAACa,aAAL;AAAqB,WAAna;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CARE,EASF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,MAAM,EAAGqB,MAAM,CAAC7B,QAAP,KAAoB,IAArB,IAAgC6B,MAAM,CAAC9B,gBAAP,IAA2B8B,MAAM,CAACsB,gBAAP,GAA0BtB,MAAM,CAACuB,iBAAvI;AAA2J,UAAA,OAAO,EAAE,mBAAM;AAAC,YAAA,MAAI,CAAC7D,KAAL,CAAW+D,IAAX,CAAgB,MAAI,CAAC/D,KAAL,CAAWG,OAA3B,EAAmCmC,MAAM,CAAClC,SAA1C;;AAAsD,YAAA,MAAI,CAACa,aAAL;AAAqB,WAAtP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CATE,EAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,MAAM,EAAIqB,MAAM,CAAC7B,QAAP,KAAoB,KAArB,IAAgC6B,MAAM,CAAC7B,QAAP,KAAoB,IAApB,IAA4B6B,MAAM,CAAC9B,gBAAP,GAA0B8B,MAAM,CAACsB,gBAA7F,IAAmHtB,MAAM,CAAC9B,gBAAP,IAA2B8B,MAAM,CAACsB,gBAAP,GAA0BtB,MAAM,CAACuB,iBAA5N;AAAgP,UAAA,OAAO,EAAE,mBAAM;AAAC,YAAA,MAAI,CAACrC,QAAL,CAAc;AAACR,cAAAA,oBAAoB,EAAE;AAAvB,aAAd;;AAA8C,YAAA,MAAI,CAAChB,KAAL,CAAWgE,QAAX,CAAoB,MAAI,CAAChE,KAAL,CAAWG,OAA/B,EAAuCmC,MAAM,CAAClC,SAA9C;;AAA2D,YAAA,MAAI,CAACa,aAAL;AAAqB,WAA9X;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAJ,CAVE,EAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,MAAM,EAAE,MAAI,CAAChB,KAAL,CAAWgE,EAA3C;AAA+C,UAAA,OAAO,EAAE;AAAA,mBAAMnE,IAAI,CAAC;AAACkC,cAAAA,IAAI,EAAE,YAAP;AAAqBkC,cAAAA,OAAO,EAAE;AAA9B,aAAD,CAAJ,CAA6CtB,IAA7C,CAAkD,UAAAuB,IAAI,EAAI;AAAC,cAAA,MAAI,CAACnE,KAAL,CAAWoE,OAAX,CAAmBD,IAAnB,EAAyB,MAAI,CAACnE,KAAL,CAAWG,OAApC,EAA6CmC,MAAM,CAAClC,SAApD;AAA+D,aAA1H,CAAN;AAAA,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAJ,CAXE,CAAP;AAiBA,OAlBH,CAFJ,CAdE,CAVJ,EAgDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKmD,gBADL,CAhDJ,CAJZ,CALJ,CAFF,CAFJ;AAyEa;;;;EA/LQ7D,S;;AAmMb,SAAS2E,eAAT,CAAyBpE,KAAzB,EAAgC;AAC5B,SAAO;AACHE,IAAAA,OAAO,EAAEF,KAAK,CAACqE,IAAN,CAAWnE,OADjB;AAEHE,IAAAA,WAAW,EAAEJ,KAAK,CAACqC,MAAN,CAAajC,WAFvB;AAGHH,IAAAA,SAAS,EAAED,KAAK,CAACqE,IAAN,CAAWpE,SAHnB;AAIHM,IAAAA,gBAAgB,EAAEP,KAAK,CAACqC,MAAN,CAAa9B,gBAJ5B;AAKH+D,IAAAA,WAAW,EAAEtE,KAAK,CAACuE,SAAN,CAAgBD;AAL1B,GAAP;AAOH;;AAED,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHnD,IAAAA,aAAa,EAAG,uBAACpB,OAAD;AAAA,aAAauE,QAAQ,CAAC9E,OAAO,CAAC2B,aAAR,CAAsBpB,OAAtB,CAAD,CAArB;AAAA,KADb;AAEH2D,IAAAA,MAAM,EAAG,gBAAC3D,OAAD,EAASC,SAAT;AAAA,aAAuBsE,QAAQ,CAAC9E,OAAO,CAACkE,MAAR,CAAe3D,OAAf,EAAuBC,SAAvB,CAAD,CAA/B;AAAA,KAFN;AAGH2D,IAAAA,IAAI,EAAG,cAAC5D,OAAD,EAASC,SAAT;AAAA,aAAuBsE,QAAQ,CAAC9E,OAAO,CAACmE,IAAR,CAAa5D,OAAb,EAAqBC,SAArB,CAAD,CAA/B;AAAA,KAHJ;AAIH4D,IAAAA,QAAQ,EAAG,kBAAC7D,OAAD,EAASC,SAAT;AAAA,aAAuBsE,QAAQ,CAAC9E,OAAO,CAACoE,QAAR,CAAiB7D,OAAjB,EAAyBC,SAAzB,CAAD,CAA/B;AAAA,KAJR;AAKHgE,IAAAA,OAAO,EAAE,iBAACD,IAAD,EAAOhE,OAAP,EAAeC,SAAf;AAAA,aAA6BsE,QAAQ,CAAC9E,OAAO,CAACwE,OAAR,CAAgBD,IAAhB,EAAsBhE,OAAtB,EAA8BC,SAA9B,CAAD,CAArC;AAAA;AALN,GAAP;AAOH;;AAET,eAAeT,OAAO,CAAC0E,eAAD,EAAiBI,kBAAjB,CAAP,CAA4C1E,MAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './enroll.css';\nimport * as actions  from '../../actions/course'\nimport Sidebar from '../../components/sidebar/sidebar.js';\nimport swal from 'sweetalert';\n\n\nclass Enroll extends Component {\n\n    constructor(props){\n\t\tsuper(props) ;\n\n\t\tthis.state = {\n            isStudent: \"\",\n            user_id: \"\",\n            course_id: \"\",\n            all_courses: [],\n            display_courses: [],\n            filtered_courses: [],\n            enrollment_count: \"\",\n            enrolled: \"\",\n            isEnrollDisabled: \"\",\n            isDropDisabled: \"\",\n            isWaitDisabled: \"\",\n            activePage: 1,\n            current : 1,\n            itemsPerPage : 4,\n            isEnterPemCodeHidden: true\n\t\t}\n        this.reload_screen = this.reload_screen.bind(this);\n        this.filterList = this.filterList.bind(this);\n        this.clickHandler = this.clickHandler.bind(this);\n\t}\n\n    componentDidMount() {\n        console.log(\"Course DID MOUNT\")\n        this.props.getAllCourses(this.props.user_id);\n        if(this.props.isStudent === \"on\"){\n            this.setState({\n                isHidden: true\n            })\n        }\n        else{\n            this.setState({\n                isHidden: false\n            })\n        }\n        \n    }\n\n    componentWillReceiveProps(newProps) {    \n        console.log('Component WILL RECIEVE PROPS!')\n        console.log(newProps)\n        this.setState({\n            display_courses: newProps.all_courses\n        })\n    }\n\n    \nreload_screen() {\n    setTimeout(function() {\n        window.location.reload();\n    }, 1000);\n    \n}\n\nfilterList(event) {\n\n\n    let text = event.target.value.toLowerCase();\n    if(event.target.value === \"\"){\n        this.setState({display_courses : this.props.all_courses})\n    }else{\n\n        \n\n        let tempArray = this.props.all_courses.filter(course => {\n           return (course.course_name.toLowerCase().includes(text)) || (course.course_id.toString().includes(text))\n        })\n        this.setState({display_courses : tempArray})\n    }\n  \n    //this.setState({display_courses: filtered_courses});\n\n    \n}\n\nclickHandler(event) {\n    this.setState({\n        current: Number(event.target.id)\n    });\n  }\n\n  sweetAlert(){\n    \n    swal(\"Great\", \"Successfully Enrolled\", \"success\")\n    .then(() => {\n      this.reload_screen();\n    })\n}\n\nrender(){\n    const { current, itemsPerPage } = this.state;\n    const indexOfLastPage = current * itemsPerPage;\n    const indexOfFirstPage = indexOfLastPage - itemsPerPage;\n    const currentTodos = this.state.display_courses.slice(indexOfFirstPage, indexOfLastPage);\n    console.log(\"Number of properties : \" + this.state.display_courses.length);\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(this.state.display_courses.length / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const showPageNumbers1 = pageNumbers.map(number => {\n        return (\n          <button class=\"btn btn-outline-primary pageButton\"><a class=\"page-link\" \n            key={number}\n            id={number}\n            onClick={this.clickHandler}\n            className=\"nums\"\n          >\n      {number}\n          </a></button>\n        );\n      });\n\nreturn (\n            \n    <div className=\"course-content-area \">\n    \n      <div className=\"row course_row\">\n      <div className=\"col-xs-3\">\n        <Sidebar/>\n    </div>\n          \n          <div className='col-xs- course-option-display'>\n            \n              {\n                 \n                      <div className=\"assignment-container\">\n                          <div className=\"assignment-heading-section\">Enroll Courses\n                          </div>\n                          <div className=\"filter-list\">\n                                <form>\n                                <fieldset className=\"form-group\">\n                                <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Search\" onChange={this.filterList}/>\n                                </fieldset>\n                                </form>\n                          </div>\n                          <table className=\"table\">\n                          <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Course Term</th>\n                                    <th scope=\"col\">Course ID</th>\n                                    <th scope=\"col\">Course Name</th>\n                                    <th scope=\"col\">Professor</th>\n                                    <th scope=\"col\">Enroll</th>\n                                    <th scope=\"col\">Drop</th>\n                                    <th scope=\"col\">Waitlist</th>\n                                    <th scope=\"col\">Permission Code</th>\n                                </tr>\n                        </thead>\n                        <tbody>\n                          {\n                            currentTodos.map((course,index) => {\n                               return <tr key={index}>\n                                \n                                \n                                    <th scope=\"row\">{index}</th>\n                                    <td>Spring 2019</td>\n                                    <td id={course.course_id}>{course.course_id}</td>\n                                    <td>{course.course_name}</td>\n                                    <td>{course.user_name}</td>\n                                    <td><button className=\"btn btn-success\" hidden={(course.enrolled === 'no' && course.enrollment_count >= course.student_capacity) || (course.enrolled === 'yes') || (course.enrollment_count == course.student_capacity + course.waitlist_capacity) || (course.enrolled === 'no' && course.enrollment_count >= course.student_capacity) } onClick= {() => {this.props.enroll(this.props.user_id,course.course_id); this.reload_screen()}}>Enroll</button></td>\n                                    <td><button className=\"btn btn-danger\" hidden={(course.enrolled === 'no' ) || (course.enrollment_count == course.student_capacity + course.waitlist_capacity)} onClick={() => {this.props.drop(this.props.user_id,course.course_id); this.reload_screen()}}>Drop</button></td>\n                                    <td><button className=\"btn btn-warning\" hidden={ (course.enrolled === 'yes') || (course.enrolled === 'no' && course.enrollment_count < course.student_capacity) || (course.enrollment_count == course.student_capacity + course.waitlist_capacity)} onClick={() => {this.setState({isEnterPemCodeHidden: false}); this.props.waitlist(this.props.user_id,course.course_id);  this.reload_screen()}}>Waitlist</button></td>\n                                    <td><button className=\"btn\" hidden={this.state.is} onClick={() => swal({text: \"Enter code\", content: \"input\"}).then(code => {this.props.getCode(code, this.props.user_id, course.course_id)})}>Enter permission code</button></td>\n                                </tr>\n                                \n                                  \n                                  \n                                \n                              })\n                          }\n                          </tbody>\n                          </table>\n                          <div>\n                              {showPageNumbers1}\n                          </div>\n                      </div>\n                      \n              }\n\n              \n          </div>\n      </div>\n    </div>\n);\n            }\n\n        }\n\n        function mapStateToProps(state) {\n            return {\n                user_id: state.auth.user_id,\n                all_courses: state.course.all_courses,\n                isStudent: state.auth.isStudent,\n                enrollment_count: state.course.enrollment_count,\n                course_list: state.dashboard.course_list\n            };\n        }\n        \n        function mapDispatchToProps(dispatch) {\n            return {\n                getAllCourses : (user_id) => dispatch(actions.getAllCourses(user_id)),\n                enroll : (user_id,course_id) => dispatch(actions.enroll(user_id,course_id)),\n                drop : (user_id,course_id) => dispatch(actions.drop(user_id,course_id)),\n                waitlist : (user_id,course_id) => dispatch(actions.waitlist(user_id,course_id)),\n                getCode: (code, user_id,course_id) => dispatch(actions.getCode(code, user_id,course_id))\n            };\n        }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Enroll);"]},"metadata":{},"sourceType":"module"}