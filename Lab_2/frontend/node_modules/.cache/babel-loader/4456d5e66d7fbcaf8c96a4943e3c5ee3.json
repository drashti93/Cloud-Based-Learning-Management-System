{"ast":null,"code":"import axios from \"axios\";\nimport fileDownload from 'js-file-download';\n\nvar FormData = require('form-data');\n\nvar backend_ip = 'http://52.8.27.226:8000/api/';\nexport function addNewAssignment(state) {\n  return function (dispatch) {\n    var formData = new FormData();\n    formData.append(\"assignment_file\", state.assignment_file[0]);\n    axios.post(backend_ip + 'createAssignment?assignment_id=' + state.assignment_id + '&assignment_name=' + state.assignment_name + '&assignment_description=' + state.assignment_description + '&assignment_dept=' + state.assignment_dept + '&assignment_date=' + state.assignment_date + '&assignment_grade=' + state.assignment_grade + '&assignment_file=' + state.assignment_file[0].name + '&course_id=' + sessionStorage.getItem(\"course_id\"), formData, {\n      \"content-type\": \"multipart/form-data\"\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"CREATE_ASSIGNMENT_SUCCESS\",\n          payload: {}\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"CREATE_ASSIGNMENT_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function downloadAssignment(assignment_file) {\n  return function (dispatch) {\n    axios.get(backend_ip + 'downloadFile?assignment_file=' + assignment_file, {\n      responseType: 'arraybuffer'\n    }).then(function (response) {\n      if (response.status === 200) {\n        fileDownload(response.data, assignment_file);\n        dispatch({\n          type: \"DOWNLOAD_ASSIGNMENT_SUCCESS\",\n          payload: {}\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"DOWNLOAD_ASSIGNMENT_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}\nexport function uploadFile(course_id, user_id, file, flag, assignmentid) {\n  return function (dispatch) {\n    var formData = new FormData();\n    formData.append(\"upload_file\", file[0]);\n    axios.post(backend_ip + 'uploadfile?course_id=' + course_id + '&user_id=' + user_id + '&upload_file_name=' + file[0].name + '&flag=' + flag + '&assignmentid=' + assignmentid, formData, {\n      \"content-type\": \"multipart/form-data\"\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"UPLOAD_FILE_SUCCESS\",\n          payload: {}\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: \"UPLOAD_FILE_FAILURE\",\n        payload: false\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab2_With_Mongo/frontend/src/actions/assignments.js"],"names":["axios","fileDownload","FormData","require","backend_ip","addNewAssignment","state","dispatch","formData","append","assignment_file","post","assignment_id","assignment_name","assignment_description","assignment_dept","assignment_date","assignment_grade","name","sessionStorage","getItem","then","response","console","log","status","type","payload","catch","error","downloadAssignment","get","responseType","data","uploadFile","course_id","user_id","file","flag","assignmentid"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport fileDownload from 'js-file-download';\nconst FormData = require('form-data');\nconst backend_ip = 'http://52.8.27.226:8000/api/';\nexport function addNewAssignment(state) {\n\n  \n  return function(dispatch){\n    let formData = new FormData();\n    formData.append(\"assignment_file\", state.assignment_file[0]);\n    axios.post(backend_ip+'createAssignment?assignment_id='+state.assignment_id+'&assignment_name='+state.assignment_name+\n        '&assignment_description='+state.assignment_description+'&assignment_dept='+state.assignment_dept+'&assignment_date='+state.assignment_date+'&assignment_grade='+state.assignment_grade+\n        '&assignment_file='+state.assignment_file[0].name+'&course_id='+sessionStorage.getItem(\"course_id\"), formData,{\"content-type\": \"multipart/form-data\"})\n        .then(function (response) {\n            console.log(response)\n            if(response.status===200) {\n                dispatch({ type: \"CREATE_ASSIGNMENT_SUCCESS\", payload: {} })\n            }\n        })\n        .catch(function (error) {\n            dispatch({type: \"CREATE_ASSIGNMENT_FAILURE\",payload: false})\n        });\n  }\n}\n\nexport function downloadAssignment(assignment_file) {\n\n  \n  return function(dispatch){\n    axios.get(backend_ip+'downloadFile?assignment_file='+assignment_file, { responseType: 'arraybuffer' })\n        .then(function (response) {\n            if(response.status===200) {\n                fileDownload(response.data, assignment_file);\n                dispatch({ type: \"DOWNLOAD_ASSIGNMENT_SUCCESS\", payload: {} })\n            }\n        })\n        .catch(function (error) {\n            dispatch({type: \"DOWNLOAD_ASSIGNMENT_FAILURE\",payload: false})\n        });\n  }\n}\n\nexport function uploadFile(course_id,user_id, file, flag, assignmentid) {\n\n  \n    return function(dispatch){\n      let formData = new FormData();\n      formData.append(\"upload_file\", file[0]);\n      axios.post(backend_ip+'uploadfile?course_id='+course_id+'&user_id='+user_id+'&upload_file_name='+file[0].name+'&flag='+flag+'&assignmentid='+assignmentid, formData,{\"content-type\": \"multipart/form-data\"})\n          .then(function (response) {\n              console.log(response)\n              if(response.status===200) {\n                  dispatch({ type: \"UPLOAD_FILE_SUCCESS\", payload: {} })\n              }\n          })\n          .catch(function (error) {\n              dispatch({type: \"UPLOAD_FILE_FAILURE\",payload: false})\n          });\n    }\n  }"]},"metadata":{},"sourceType":"module"}