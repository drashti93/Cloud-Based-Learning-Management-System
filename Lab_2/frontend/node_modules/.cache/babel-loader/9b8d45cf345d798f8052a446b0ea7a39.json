{"ast":null,"code":"import _classCallCheck from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/src/components/enrollment/enroll.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './enroll.css';\nimport * as actions from '../../actions/course';\nimport Sidebar from '../../components/sidebar/sidebar.js';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\n\nvar Enroll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Enroll, _Component);\n\n  function Enroll(props) {\n    var _this;\n\n    _classCallCheck(this, Enroll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Enroll).call(this, props));\n    _this.state = {\n      isStudent: \"\",\n      user_id: \"\",\n      course_id: \"\",\n      all_courses: []\n    };\n    return _this;\n  }\n\n  _createClass(Enroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Course DID MOUNT\");\n      this.props.getAllCourses();\n\n      if (this.props.isStudent === \"on\") {\n        this.setState({\n          isHidden: true\n        });\n      } else {\n        this.setState({\n          isHidden: false\n        });\n      }\n    } // enroll(course_id){\n    //     console.log()\n    //     // this.props.all_courses.map((course,index) => {\n    //     // this.props.enroll(this.props.user_id, course.course_id);\n    //     // })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.all_courses);\n      return React.createElement(\"div\", {\n        className: \"course-content-area \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row course_row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs- course-option-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"assignment-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"assignment-heading-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"    Courses\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Course Term\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Course ID\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Course Name\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Professor\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Enroll\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.props.all_courses.map(function (course, index) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, index), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Spring 2019\"), React.createElement(\"td\", {\n          id: course.course_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, course.course_id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, course.course_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, course.user_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this2.props.enroll(_this2.props.user_id, course.course_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Enroll\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.props.drop(_this2.props.user_id, course.course_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Drop\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this2.props.drop(_this2.props.user_id, course.course_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Waitlist\")));\n      })))))));\n    }\n  }]);\n\n  return Enroll;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    user_id: state.auth.user_id,\n    all_courses: state.course.all_courses,\n    isStudent: state.auth.isStudent\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getAllCourses: function getAllCourses() {\n      return dispatch(actions.getAllCourses());\n    },\n    enroll: function enroll(user_id, course_id) {\n      return dispatch(actions.enroll(user_id, course_id));\n    },\n    drop: function drop(user_id, course_id) {\n      return dispatch(actions.drop(user_id, course_id));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Enroll);","map":{"version":3,"sources":["/Users/drashtithakkar/Documents/Semester_2/CMPE273/Lab 1/Github/273_Canvas/frontend/src/components/enrollment/enroll.js"],"names":["React","Component","connect","actions","Sidebar","queryString","Link","Enroll","props","state","isStudent","user_id","course_id","all_courses","console","log","getAllCourses","setState","isHidden","map","course","index","course_name","user_name","enroll","drop","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,cAAP;AACA,OAAO,KAAKC,OAAZ,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACpB,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACHC,MAAAA,SAAS,EAAE,EADR;AAEHC,MAAAA,OAAO,EAAE,EAFN;AAGHC,MAAAA,SAAS,EAAE,EAHR;AAIHC,MAAAA,WAAW,EAAE;AAJV,KAAb;AAHoB;AAWpB;;;;wCAEsB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAKP,KAAL,CAAWQ,aAAX;;AACA,UAAG,KAAKR,KAAL,CAAWE,SAAX,KAAyB,IAA5B,EAAiC;AAC7B,aAAKO,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH,OAJD,MAKI;AACA,aAAKD,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH;AAEJ,K,CAGL;AAEA;AACA;AACA;AACA;AAGA;;;;6BAEQ;AAAA;;AACJJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWK,WAAvB;AACJ,aAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAKI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIY;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,EAKI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAMI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADN,CADA,EAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKL,KAAL,CAAWK,WAAX,CAAuBM,GAAvB,CAA2B,UAACC,MAAD,EAAQC,KAAR,EAAkB;AACzC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGP;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBA,KAAjB,CAHO,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJG,EAKH;AAAI,UAAA,EAAE,EAAED,MAAM,CAACR,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BQ,MAAM,CAACR,SAAlC,CALG,EAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKQ,MAAM,CAACE,WAAZ,CANG,EAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,MAAM,CAACG,SAAZ,CAPG,EAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACf,KAAL,CAAWgB,MAAX,CAAkB,MAAI,CAAChB,KAAL,CAAWG,OAA7B,EAAqCS,MAAM,CAACR,SAA5C,CAAN;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CARG,EASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACJ,KAAL,CAAWiB,IAAX,CAAgB,MAAI,CAACjB,KAAL,CAAWG,OAA3B,EAAmCS,MAAM,CAACR,SAA1C,CAAN;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CATG,EAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACJ,KAAL,CAAWiB,IAAX,CAAgB,MAAI,CAACjB,KAAL,CAAWG,OAA3B,EAAmCS,MAAM,CAACR,SAA1C,CAAN;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAJ,CAVG,CAAP;AAgBD,OAjBH,CAFJ,CAXE,CAJJ,CAJZ,CALJ,CAFF,CAFJ;AA4Da;;;;EAxGQX,S;;AA4Gb,SAASyB,eAAT,CAAyBjB,KAAzB,EAAgC;AAC5B,SAAO;AACHE,IAAAA,OAAO,EAAEF,KAAK,CAACkB,IAAN,CAAWhB,OADjB;AAEHE,IAAAA,WAAW,EAAEJ,KAAK,CAACW,MAAN,CAAaP,WAFvB;AAGHH,IAAAA,SAAS,EAAED,KAAK,CAACkB,IAAN,CAAWjB;AAHnB,GAAP;AAKH;;AAED,SAASkB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHb,IAAAA,aAAa,EAAG;AAAA,aAAMa,QAAQ,CAAC1B,OAAO,CAACa,aAAR,EAAD,CAAd;AAAA,KADb;AAEHQ,IAAAA,MAAM,EAAG,gBAACb,OAAD,EAASC,SAAT;AAAA,aAAuBiB,QAAQ,CAAC1B,OAAO,CAACqB,MAAR,CAAeb,OAAf,EAAuBC,SAAvB,CAAD,CAA/B;AAAA,KAFN;AAGHa,IAAAA,IAAI,EAAG,cAACd,OAAD,EAASC,SAAT;AAAA,aAAuBiB,QAAQ,CAAC1B,OAAO,CAACsB,IAAR,CAAad,OAAb,EAAqBC,SAArB,CAAD,CAA/B;AAAA;AAHJ,GAAP;AAKH;;AAET,eAAeV,OAAO,CAACwB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CrB,MAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './enroll.css';\nimport * as actions  from '../../actions/course'\nimport Sidebar from '../../components/sidebar/sidebar.js';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\n\nclass Enroll extends Component {\n\n    constructor(props){\n\t\tsuper(props) ;\n\n\t\tthis.state = {\n            isStudent: \"\",\n            user_id: \"\",\n            course_id: \"\",\n            all_courses: []\n\t\t}\n        \n        \n\t}\n\n    componentDidMount() {\n        console.log(\"Course DID MOUNT\")\n        this.props.getAllCourses();\n        if(this.props.isStudent === \"on\"){\n            this.setState({\n                isHidden: true\n            })\n        }\n        else{\n            this.setState({\n                isHidden: false\n            })\n        }\n        \n    }\n\n    \n// enroll(course_id){\n\n//     console.log()\n//     // this.props.all_courses.map((course,index) => {\n//     // this.props.enroll(this.props.user_id, course.course_id);\n//     // })\n\n\n// }\n\nrender(){\n    console.log(this.props.all_courses)\nreturn (\n            \n    <div className=\"course-content-area \">\n    \n      <div className=\"row course_row\">\n      <div className=\"col-xs-3\">\n        <Sidebar/>\n    </div>\n          \n          <div className='col-xs- course-option-display'>\n            \n              {\n                 \n                      <div className=\"assignment-container\">\n                          <div className=\"assignment-heading-section\">    Courses\n                                \n                          </div>\n                          <table className=\"table\">\n                          <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Course Term</th>\n                                    <th scope=\"col\">Course ID</th>\n                                    <th scope=\"col\">Course Name</th>\n                                    <th scope=\"col\">Professor</th>\n                                    <th scope=\"col\">Enroll</th>\n                                </tr>\n                        </thead>\n                        <tbody>\n                          {\n                            this.props.all_courses.map((course,index) => {\n                                return <tr>\n                            \n                                \n                                <th scope=\"row\">{index}</th>\n                                    <td>Spring 2019</td>\n                                    <td id={course.course_id}>{course.course_id}</td>\n                                    <td>{course.course_name}</td>\n                                    <td>{course.user_name}</td>\n                                    <td><button className=\"btn btn-success\" onClick={() => this.props.enroll(this.props.user_id,course.course_id)}>Enroll</button></td>\n                                    <td><button className=\"btn btn-danger\" onClick={() => this.props.drop(this.props.user_id,course.course_id)}>Drop</button></td>\n                                    <td><button className=\"btn btn-warning\" onClick={() => this.props.drop(this.props.user_id,course.course_id)}>Waitlist</button></td>\n                                </tr>\n                                \n                                  \n                                  \n                                \n                              })\n                          }\n                          </tbody>\n                          </table>\n                      </div>\n                      \n              }\n\n              \n          </div>\n      </div>\n    </div>\n);\n            }\n\n        }\n\n        function mapStateToProps(state) {\n            return {\n                user_id: state.auth.user_id,\n                all_courses: state.course.all_courses,\n                isStudent: state.auth.isStudent\n            };\n        }\n        \n        function mapDispatchToProps(dispatch) {\n            return {\n                getAllCourses : () => dispatch(actions.getAllCourses()),\n                enroll : (user_id,course_id) => dispatch(actions.enroll(user_id,course_id)),\n                drop : (user_id,course_id) => dispatch(actions.drop(user_id,course_id))\n            };\n        }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Enroll);"]},"metadata":{},"sourceType":"module"}