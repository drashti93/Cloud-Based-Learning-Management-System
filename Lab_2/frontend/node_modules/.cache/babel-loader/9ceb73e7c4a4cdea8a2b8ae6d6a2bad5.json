{"ast":null,"code":"import _objectSpread from \"/Users/drashtithakkar/Documents/Semester_2/CMPE273/myapp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nimport swal from 'sweetalert';\nvar headers = {\n  'Accept': 'application/json'\n};\nvar backend_ip = 'http://52.8.27.226:8000/api/';\nexport function login(user_id, password) {\n  return function (dispatch) {\n    fetch(backend_ip + 'login', {\n      method: 'POST',\n      headers: _objectSpread({}, headers, {\n        'Content-Type': 'application/json'\n      }),\n      credentials: 'include',\n      body: JSON.stringify({\n        user_id: user_id,\n        password: password\n      })\n    }).then(function (response) {\n      console.log(\"response : -----\");\n      console.log(response);\n      response.json().then(function (res) {\n        console.log(res);\n\n        if (response.status === 200) {\n          localStorage.setItem('myjwttoken', res.values.token);\n          dispatch({\n            type: \"LOGIN_STATUS\",\n            payload: res.user_id // payload: user_id\n\n          });\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: \"LOGIN_FAILED\",\n        payload: false\n      });\n    });\n  };\n}\nexport function signup(fullname, email, user_id, password, isStudent) {\n  console.log(\"Action Signup \" + isStudent);\n  return function (dispatch) {\n    axios.post(backend_ip + 'signup', {\n      fullname: fullname,\n      email: email,\n      user_id: user_id,\n      password: password,\n      isStudent: isStudent\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: \"SIGNUP_STATUS\",\n          payload: true\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: \"SIGNUP_STATUS\",\n        payload: false\n      });\n    });\n  };\n}\nexport function checkSession() {\n  return function (dispatch) {\n    console.log(\"Check Session Action\");\n    fetch(backend_ip + 'checkSession', {\n      method: 'POST',\n      headers: _objectSpread({}, headers, {\n        'Content-Type': 'application/json'\n      }),\n      credentials: 'include',\n      body: JSON.stringify({})\n    }).then(function (response) {\n      console.log(\"Session : -----\");\n      console.log(response);\n      response.json().then(function (res) {\n        console.log(\"Checking received response\");\n        console.log(res);\n\n        if (response.status === 200) {\n          dispatch({\n            type: \"SESSION_SUCCESS\",\n            payload: res // payload: user_id\n\n          });\n        } else {\n          dispatch({\n            type: \"SESSION_FAILED\",\n            payload: false\n          });\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: \"SESSION_FAILED\",\n        payload: false\n      });\n    });\n  };\n}\nexport function logout() {\n  console.log(\"Action logout \");\n  return function (dispatch) {\n    fetch(backend_ip + 'logout', {\n      method: 'POST',\n      headers: _objectSpread({}, headers, {\n        'Content-Type': 'application/json'\n      }),\n      credentials: 'include',\n      body: JSON.stringify({})\n    }).then(function (response) {\n      console.log(\"Logout received\");\n      console.log(response);\n      response.json().then(function (res) {\n        console.log(res);\n\n        if (response.status === 200) {\n          dispatch({\n            type: \"LOGOUT_STATUS\",\n            payload: true\n          });\n        } else {\n          dispatch({\n            type: \"LOGOUT_STATUS\",\n            payload: false\n          });\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: \"LOGOUT_STATUS\",\n        payload: false\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/drashtithakkar/Documents/Semester_2/CMPE273/myapp/frontend/src/actions/auth.js"],"names":["axios","swal","headers","backend_ip","login","user_id","password","dispatch","fetch","method","credentials","body","JSON","stringify","then","response","console","log","json","res","status","localStorage","setItem","values","token","type","payload","catch","error","signup","fullname","email","isStudent","post","checkSession","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport swal from 'sweetalert';\nconst headers = {\n  'Accept': 'application/json'\n};\n\nconst backend_ip = 'http://52.8.27.226:8000/api/';\nexport function login(user_id,password) {\n\n  \n  return function(dispatch){\n\n          fetch(backend_ip+'login', {\n            method: 'POST',\n            headers: {\n              ...headers,\n              'Content-Type': 'application/json'\n            },\n            credentials:'include',\n            body: JSON.stringify({user_id,password})\n        }).then(function (response) {\n              console.log(\"response : -----\" )\n              console.log(response)\n\n              response.json().then(res => {\n                console.log(res)\n                if(response.status===200) {\n                  localStorage.setItem('myjwttoken', res.values.token);\n                    dispatch({\n                      type: \"LOGIN_STATUS\",\n                      \n                      payload: res.user_id\n                      // payload: user_id\n                    })\n                }\n\n              })\n        })\n        .catch(error => {\n          console.log(error);\n              \n                  dispatch({\n                    type: \"LOGIN_FAILED\",\n                    payload: false\n                  })\n                  \n      })\n\n\n  }\n}\n\nexport function signup(fullname,email,user_id,password, isStudent) {\n\n  console.log(\"Action Signup \" + isStudent)\n  return function(dispatch){\n      axios.post(backend_ip+'signup', {\n            \n                  fullname,email,user_id,password,isStudent\n            \n            })\n            .then(function (response) {\n                 \n              console.log(response)\n              if(response.status===200) {\n                \n                dispatch({\n                    type: \"SIGNUP_STATUS\",\n                    payload: true\n                })\n\n\n              }\n               \n\n            })\n            .catch(function (error) {\n              console.log(error);\n              dispatch({\n                type: \"SIGNUP_STATUS\",\n                payload: false\n              })\n              \n            });\n  }\n}\n\nexport function checkSession(){\n  return function(dispatch){\n    console.log(\"Check Session Action\")\n    fetch(backend_ip+'checkSession', {\n          method: 'POST',\n          headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n          },\n          credentials:'include',\n          body: JSON.stringify({})\n      }).then(function (response) {\n            console.log(\"Session : -----\" )\n            console.log(response)\n\n            response.json().then(res => {\n              console.log(\"Checking received response\");\n              console.log(res)\n              if(response.status===200) {\n              \n                  dispatch({\n                    type: \"SESSION_SUCCESS\",\n                    \n                    payload: res\n                    // payload: user_id\n                  })\n              }else{\n                dispatch({\n                  type: \"SESSION_FAILED\",\n                  payload: false\n                })\n              }\n\n            })\n      })\n        .catch(error => {\n          console.log(error);\n              \n                  dispatch({\n                    type: \"SESSION_FAILED\",\n                    payload: false\n                  })\n      })\n  }\n}\n\n\nexport function logout(){\n  console.log(\"Action logout \")\n\n  return function(dispatch){\n    \n    fetch(backend_ip+'logout', {\n          method: 'POST',\n          headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n          },\n          credentials:'include',\n          body: JSON.stringify({})\n      }).then(function (response) {\n            console.log(\"Logout received\" )\n            console.log(response)\n\n            response.json().then(res => {\n              console.log(res)\n              if(response.status===200) {\n              \n                dispatch({\n                  type: \"LOGOUT_STATUS\",\n                  payload: true\n                })\n\n              }else{\n                dispatch({\n                  type: \"LOGOUT_STATUS\",\n                  payload: false\n                })\n              }\n\n            })\n      })\n        .catch(error => {\n          console.log(error);\n              \n            dispatch({\n              type: \"LOGOUT_STATUS\",\n              payload: false\n            })\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}